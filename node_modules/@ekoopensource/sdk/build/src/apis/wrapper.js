"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const requests_1 = require("../utils/requests");
class Wrapper {
    constructor(options) {
        this.options = options;
        this.options.headers = {
            Authorisation: ""
        };
    }
    formatUrl(nodeId, path) {
        return `https://api.${nodeId}.${this.options.enviroment}.ekoopenbuild.com/${path}`;
    }
    post(nodeId, path, payload) {
        return __awaiter(this, void 0, void 0, function* () {
            const requestOptions = Object.assign(Object.assign({}, this.options), { data: payload });
            const url = this.formatUrl(nodeId, path);
            return requests_1.default(`POST`, url, requestOptions);
        });
    }
    get(nodeId, path, payload) {
        return __awaiter(this, void 0, void 0, function* () {
            const requestOptions = Object.assign(Object.assign({}, this.options), { data: payload });
            const url = this.formatUrl(nodeId, path);
            return requests_1.default(`GET`, url, requestOptions);
        });
    }
}
exports.default = Wrapper;
