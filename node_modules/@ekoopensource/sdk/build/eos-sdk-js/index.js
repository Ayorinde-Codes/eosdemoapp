"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EOS = void 0;
const config = require('./config');
const util_1 = require("./src/utils/util");
const wrapper_1 = require("./src/apis/wrapper");
const objectAssignDeep = require(`object-assign-deep`);
class EOS {
    /**
     * Initiate client instance
     * @param options Optional. Set options for HTTP requests
     */
    constructor(options) {
        const defaultOption = {
            version: config.version,
            timeout: config.timeout,
            responseType: 'json',
            enviroment: this.setEnviroment(),
        };
        this.options = objectAssignDeep({}, defaultOption, options);
        util_1.default.checkCredentials(this.options);
    }
    setEnviroment(enviroment = config.enviroment, options) {
        this.options = objectAssignDeep(this.options, { enviroment: enviroment }, options);
        return this.options.enviroment;
    }
    init() {
        util_1.default.checkCredentials(this.options);
        return 'Sdk Initialized....';
    }
    fetchData(nodeId, path, payload, options) {
        const requestOptions = objectAssignDeep({}, this.options, options);
        return new wrapper_1.default(requestOptions).get(nodeId, path, payload);
    }
    postData(nodeId, path, payload, options) {
        const requestOptions = objectAssignDeep({}, this.options, options);
        return new wrapper_1.default(requestOptions).get(nodeId, path, payload);
    }
}
exports.EOS = EOS;
